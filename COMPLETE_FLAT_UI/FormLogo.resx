<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALQAAADICAYAAABBLcuIAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAACCZJREFUeF7t3c+KZdUVx/GeVfWLXX2EjDJwEAkZBEJ8gwwEQQxI/ozs7pjn0MTW
        bmMTB75DhiEQkphAV7sX/G6oWuxbde9Za5179r7fD/woQWuvc876cagurfIRAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADABrxJpCNT/eFq99mlRbeOU6mHqXR0Ci34zQWGcp9K
        /SuhESFaaG/Zl5b/l9uixwNP3SuhESFaYG/Blx5K3aPuldCIEFucWyRRnjzefd0+8sa+Td0roREhWlh3
        oeROKLVR90poRIgtyi2OHA6lVvdKaESILcktjdyTp9e75+3j5RZb3SuhESG2nNsLI0fnMkut7pXQiBBb
        jFsUOT6XV2p1r4RGhNhS3JLIabHndznFVvdKaESIFtJbFDktl1Fqda+ERoTYItxiyPLMX2p1r4RGhNgS
        3FLI8lDoCI0IsSW4pZBY5i61uldCI0JsAW4hJJhnV7s/6fHOR90roREhbQEUuiZzvqnVvRIaEWIP3i2C
        JGTat7S6V0IjQj69euu73kJISuZ7S6t7JTQipBX6+84iSF7mKrW6V0IjQlqh/9dZAskLhT6WRoRQ6FUy
        T6nVvRIaEUKh6zPVHxDVvRIaEbK00O3z/ts+2ndIRkr3XlbKHG9pda+ERoQsLfQfr97+h44YRrvuc5ab
        Qj9EI0IChf6njhhSu4fP7EsBf19VeXK9e6nRY1P3SmhESKDQ/9IRQ1uz1C3jv6XVvRIaERIo9L91xPDa
        /az5JcjYpVb3SmhEyNJCf3r19n90xBTaPa1Vagp9iEaELC/0W1MV2rT7WqPUFPoQjQih0Hfp1xR07zkp
        FPoQjQih0He1e+MtfR91r4RGhFDou9q9Uej7qHslNCJkeaHn+kPhbe3+qktNoXs0IoRC97Wvpb/q3Xdi
        xiy1uldCI0IodF+7R97SPepeCY0IodB97R4pdI+6V0IjQih0X7tHCt2j7pXQiBAK3dfukUL3qHslNCKE
        Qve1e6TQPepeCY0IodB97R4pdI+6V0IjQiKFbh9t6WeJLr+M5nTvPSkU2tOIkKWF3kA+bykrt87uzc0K
        hfY0ImTgQt9OejnsTDcjOxTa04iQSQptSX1b67zenKxQaE8jQiYq9D4pRbFz3LnZodCeRoRMWGhLuCx2
        hjszOxTa04iQSQttCRXGPt+dlx0K7WlEyKyFtp880S0u0s6g0D3qXgmNCJn4DW1ZXBr7XHdWdii0pxEh
        Mxc68jvl2udT6B51r4RGhOjf+PUe+CxZVBz7PHdOdii0pxEh7Q39bedhzxQKnUndK6ERYa3Ur+xXe3Ue
        +gyh0JnUvRIakWbl3/O2VhYXp/h5UGhPI9LYQ3YPfYYsLo59rjsrMxTa04hU9qDdgx89FDqTuldCI9LZ
        w3YPf8hEvm1n2hkU2lP3SmhECXvgbgEjJlQa+3x3XmYotKcRZeyhuyWMFgqdTd0rozFl7MG7RYyScGHs
        DHdmZih0j8aUsodvWeFXzWYlpSx2jjs3MxS6R2NWY4twi9liKHQV9a6MxqzKlnErvWWdM2lFsbPc2Zmh
        0Ido1FnYYo5Mb6mpiX6bzmtnVl43hT5EozbJFucWWZJPHu9eaWSadi6F9tS5Uhq1ObY0t8TKpBfEznQz
        MkOhD9GozWlLs18G01tmap5d7/6skana2RTaU+dKadSm2MLcAitTUg47183JDIW+j8ZtxpPHu687S6xI
        WTHsbDcrMxT6Phq3CbYst7yqlJbCznfzMkOh76NxZ2eLcosrScV3Nbw2h0J76tsqNPJsbEluaZUpL4TN
        cDMzQ6EfopFns9aPcFV9V8Nrsyh0j/q2Co1cnS3ILawyq5TB5ri5maHQx9DI1T2d4Lsans1yszNDoY+l
        saux5bhlVWXVEtg8Nz8z4xbaqGur0dhythi3qJJ88nj3V41cTZtLoQ9Rz1al0aVsMW5RVVm9ADbTXUNm
        KPQSGl/CvtvQWVR61vquhtdmU+j7qGOr0/hUthC3oKqcbfE2211LZih0lC4jxdPr3YvOkipCobdM3To7
        Xc4itgy3nKqcdek2311PZih0JV3eg2wRbjFVOfvC7RrcNWWGQm/Bzc3N37/55W/ffPOL37x5/uP3e4vK
        CoUehboxhaJSb2LZdh3uujJDobfqix/9qrewpdnMou1a3LVlZp5CG3VhCi9/9uvewpaGQo9KfZhC0lt6
        U0u263HXlxkKvWWv3vtdb2mnhkKPTn2YwouffNhb3LHZ3ILtmtw1ZmbOQhv1YQoLv/TY5HLtutx1ZmXe
        Mu+pD8N78e5pb+lz/YdHx2jXl17oNX64dzPUieGd8Jb+XLe+Se36Kt7Q87+d99SH4Z3wB8RNL9euz11v
        Ri6n0EadGN7Ln37UW+btbH6xdo3umqO5rDLvqRPDe+BLj4sq9Dl+hGxT1ImhvXrv993ltgzxprLrdNcd
        yWW+nT11Y1h/+fnHdxb77Hr3XLe2eVbC29e+NNn/Z4HhqRvD+vKdD/bLHeotZde7L2UgvJkPUT+GZF9P
        6zaGYWV05Tw1lPkh6sdwXr9+/b1uYRhWSFfQU0KZj6WODOXm5ua1Ln8YVkpX0mNDmZdSX7bub7rcoVgx
        XVGPCWXOoOJs0ZBlNlZOV9Zu9GuE7Z+lzBVUpLOxLy/0l8OWeU9F7Ra5hRKvTcVKpaPv1f6x4cu8ty+u
        j/42AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJR49OgH
        p64Ju6aw9j4AAAAASUVORK5CYII=
</value>
  </data>
</root>